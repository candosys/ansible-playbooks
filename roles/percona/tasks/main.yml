---
# This role will install Percona, and secure it.

- name: Getting Ubuntu/Debian version
  shell: executable=/bin/bash  source /etc/lsb-release && echo $DISTRIB_CODENAME
  register: distro_codename

- name: Setup percona repo - key
  apt_key: url=http://www.percona.com/downloads/RPM-GPG-KEY-percona state=present
  #apt_key: id=0x1C4CBDCDCD2EFD2A url=http://keys.gnupg.net

- name: Setup percona repo - sources - binary
  apt_repository: repo='{{ db_repo }}' state=present
#  template: src=percona.list.j2 dest=/etc/apt/sources.list.d/percona.list owner=root mode=0644

- name: Setup percona repo - sources - source
  apt_repository: repo='{{ db_repo_src }}' state=present

- name: Install Percona package
  apt: pkg={{ item }} state=present
  with_items:
   - percona-server-server
   - mysqltuner
   - python-mysqldb

- name: update percona root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ db_root_password }}
  with_items:
   - $ansible_hostname
   - 127.0.0.1
   - ::1
   - localhost

- name: Create percona configuration file
  template: src=my.cnf.percona.j2 dest=/etc/mysql/my.cnf owner=root mode=0644
  notify: 
  - restart percona

- name: Start percona Service
  #service: name={{ db_engine }} state=started enabled=true
  service: name=mysql state=started enabled=true

- name: copy .my.cnf file with root password credentials
  template: src=root/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600


- name: delete anonymous percona server user for $server_hostname
  mysql_user: name="" host=$server_hostname state=absent

- name: delete anonymous percona server user for localhost
  mysql_user: name="" state=absent

- name: remove the percona test database
  mysql_db: name=test state=absent
