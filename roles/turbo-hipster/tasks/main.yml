---
# This role installs Turbo-Hipster

# Create MySQL databases

- name: creating databases
  mysql_db: name={{ item }} state=present
  with_items: th_databases

- name: Create Application DB User
  mysql_user: name={{ th_test_user }} password={{ th_test_pass }} append_privs=yes priv={{ item }}.*:ALL host='{{ th_test_host }}' state=present
  with_items: th_databases

# Install turbo-hipster dependancies
- name: Install turbo-hipster dependancies - APT
  apt: pkg={{ item }} state=present
  with_items:
   - git
   - python-pip
   - python-swiftclient
   - python-daemon
   - tar
   - bzip2

- name: Install turbo-hipster dependancies - PIP
  pip: name={{ item }} state=present
  with_items:
   - pbr
   - gear
   - lockfile
   - extras
   - GitPython
   - sphinxcontrib-programoutput

- name: Install turbo-hipster testing dependancies - APT
  apt: pkg={{ item }} state=present
  with_items:
   - python-sphinx
   - python-subunit

- name: Install turbo-hipster testing dependancies - PIP
  pip: name={{ item }} state=present
  with_items:
   - pep8
   - pyflakes
   - flake8
   - hacking
   - coverage
   - docutils
   - discover
   - testrepository
   - testtools

- name: Create user turbo-hipster
  user: name={{ th_user }} append=yes state=present shell=/bin/bash 
        home=/home/{{ th_user }} comment="Turbo-Hipster user"

- name: Move the makenetnamespace.sh script to the client. 
  copy: src=makenetnamespace.sh dest=/home/{{ th_user }}/makenetnamespace.sh owner={{ th_user }} mode=0755

- name: Make sure the makenetnamespace.sh script runs at startup
  shell: executable=/bin/bash if [ $(grep -c "makenetnamespace.sh" /etc/rc.local) -eq 0 ]; then if [ $(grep -c "exit 0" /etc/rc.local) -gt 0 ]; then sed -i '/exit 0/i/home/{{ th_user }}/makenetnamespace.sh' /etc/rc.local; else echo "/home/{{ th_user }}/makenetnamespace.sh" >> /etc/rc.local; fi; fi 

- name: Setup Network Name Space for networkless nova testing
  shell: executable=/bin/bash if [ ! -e '/var/run/netns/nonet' ]; then /home/{{ th_user }}/makenetnamespace.sh ;fi

# Install and setup Turbo-Hipster.
- name: Copy the code from repository
  git: repo={{ th_repo }} dest={{ th_repo_destination }}
  notify:
   - install turbo-hipster
   - create turbo-hipster directories
   - deploying config file - config.json
   - set dataset permissions
   - restart turbo-hipster

- name: Change ownership of the code over to turbo-hipster
  command: chown {{ th_user }}:{{ th_user }} -R {{ th_repo_destination }}

- name: Synchronise the datasets
  synchronize: archive=yes delete=yes src={{ th_local_dataset_path }} dest={{ th_dataset_path }} rsync_path="sudo rsync"
  notify:
   - restart turbo-hipster

- name: Make sure Turbo-Hipster starts at boot
  service: name=turbo-hipster  enabled=true 

